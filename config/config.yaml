# Tooth Caries Detection with Detectron2 Configuration

project:
  name: "tooth_caries_detection"
  description: "Tooth caries detection using Faster R-CNN with Detectron2."
  version: "1.0.0"
  task_type: "object_detection"

# 数据配置
data:
  # 数据路径
  root_dir: "data"
  raw_dir: "data/raw"
  images_dir: "data/raw/images"
  labelme_dir: "data/raw/labelme"
  processed_dir: "data/processed"
  annotations_dir: "data/annotations"
  splits_dir: "data/splits"
  
  # 数据格式
  input_format: "labelme"
  output_format: "coco"
  image_extensions: [".jpg", ".jpeg", ".png", ".bmp"]
  annotation_extension: ".json"
  
  # 图像处理
  image_config:
    min_size: 800
    max_size: 1333
    keep_aspect_ratio: true
  
  # 数据分割
  # 数据集划分比例，包括训练集、验证集和测试集
  train_ratio: 0.8
  val_ratio: 0.1
  random_seed: 42
  
  # 类别配置
  # 这里只检测一个类别：龋齿
  categories: ["tooth caries"]
  num_classes: 1
  
  # 数据加载
  # batch_size是每个批次的图像数量，num_workers是加载数据时使用的线程数，shuffle表示是否打乱数据
  dataloader:
    batch_size: 2
    num_workers: 4
    shuffle: true

# Detectron2模型配置
# 使用Faster R-CNN模型
# 这里的路径不是电脑上的实际路径，而是Detectron2模型库中的配置文件和预训练权重
model:
  config_file: "COCO-Detection/faster_rcnn_R_50_FPN_3x.yaml"
  weights: "COCO-Detection/faster_rcnn_R_50_FPN_3x.yaml"
  device: "cuda"
  
  # 模型参数

  roi_heads:
    score_thresh_test: 0.5     # 测试时的置信度阈值
    nms_thresh_test: 0.5      # 非极大值抑制阈值
    num_classes: 1            # 类别数量

# 训练配置
training:
  max_iter: 3000  # 最大迭代次数
  base_lr: 0.00025  # 基础学习率
  lr_scheduler_name: "WarmupMultiStepLR"  # 学习率调度器名称
  warmup_iters: 1000  # 预热迭代次数，就是在训练初期逐渐增加学习率的迭代次数
  steps: [2000, 2500]  # 学习率下降的迭代次数
  gamma: 0.1  # 学习率下降的倍率
  
  # 训练监控
  checkpoint_period: 500  # 每500次迭代保存一次模型
  eval_period: 500  # 每500次迭代验证一次
  log_period: 100  # 每100次迭代记录一次日志
  
  # 输出目录
  output_dir: "experiments/detectron2_output"  # 模型输出目录

# 验证配置
validation:
  metrics: ["bbox"]  # 评估边界框检测精度

# 推理配置
inference:
  model_path: "experiments/detectron2_output/model_final.pth"
  score_threshold: 0.5  # 推理时的置信度阈值
  output_dir: "experiments/predictions"
  save_visualizations: true  # 是否保存可视化结果

# 路径配置
paths:
  train_json: "data/annotations/train_coco.json"
  val_json: "data/annotations/val_coco.json"
  test_json: "data/annotations/test_coco.json"

# 日志配置
logging:
  level: "INFO"
  log_dir: "experiments/logs"

# 硬件配置
hardware:
  device: "cuda"
  mixed_precision: true
